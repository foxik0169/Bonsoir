[{"data":1,"prerenderedAt":594},["Reactive",2],{"content-query-4XPSPQuXYx":3,"current-commit-sha":586},{"_path":4,"_dir":5,"_draft":6,"_partial":6,"_locale":5,"title":7,"description":5,"body":8,"_type":581,"_id":582,"_source":583,"_file":584,"_extension":585},"/docs","",false,"Installation",{"type":9,"children":10,"toc":568},"root",[11,19,26,32,100,114,120,125,137,143,150,171,180,185,198,210,215,221,239,248,253,259,264,273,279,284,290,302,313,319,324,333,359,365,386,391,449,455,460,499,505,519,555],{"type":12,"tag":13,"props":14,"children":16},"element","h1",{"id":15},"installation",[17],{"type":18,"value":7},"text",{"type":12,"tag":20,"props":21,"children":23},"h2",{"id":22},"requirements",[24],{"type":18,"value":25},"Requirements",{"type":12,"tag":27,"props":28,"children":29},"p",{},[30],{"type":18,"value":31},"Depending on your project targets, you need at least :",{"type":12,"tag":33,"props":34,"children":35},"ul",{},[36,53,67,72,86],{"type":12,"tag":37,"props":38,"children":39},"li",{},[40,42,51],{"type":18,"value":41},"Android : API level 21 (Android 5.0), which corresponds to minimum Android version supported by Flutter.\nNote that attributes don't work on Android 6.0 and below\n(see ",{"type":12,"tag":43,"props":44,"children":48},"a",{"href":45,"rel":46},"https://issuetracker.google.com/issues/37020436",[47],"nofollow",[49],{"type":18,"value":50},"this ticket",{"type":18,"value":52}," for more details).",{"type":12,"tag":37,"props":54,"children":55},{},[56,58,65],{"type":18,"value":57},"iOS : 13.0, because Bonsoir rely on ",{"type":12,"tag":59,"props":60,"children":62},"code",{"className":61},[],[63],{"type":18,"value":64},"NWBrowser",{"type":18,"value":66},".",{"type":12,"tag":37,"props":68,"children":69},{},[70],{"type":18,"value":71},"macOS : 10.15 (El Capitan), for the same reason as above.",{"type":12,"tag":37,"props":73,"children":74},{},[75,77,84],{"type":18,"value":76},"Windows : Win 10 (19H1/1903) (Mai 2019 Update).\nThe ",{"type":12,"tag":43,"props":78,"children":81},{"href":79,"rel":80},"https://msdn.microsoft.com/en-us/library/windows.networking.servicediscovery.dnssd.aspx",[47],[82],{"type":18,"value":83},"WIN32 DNS-SD API",{"type":18,"value":85},"\nhas been exposed from, at least, that version.",{"type":12,"tag":37,"props":87,"children":88},{},[89,91,98],{"type":18,"value":90},"Linux : requires ",{"type":12,"tag":43,"props":92,"children":95},{"href":93,"rel":94},"https://www.avahi.org/",[47],[96],{"type":18,"value":97},"Avahi daemon",{"type":18,"value":99},", because Bonsoir uses its D-Bus interface\nfor browsing and registering mDNS/DNS-SD services.",{"type":12,"tag":27,"props":101,"children":102},{},[103,105,112],{"type":18,"value":104},"This plugin ",{"type":12,"tag":43,"props":106,"children":109},{"href":107,"rel":108},"https://stackoverflow.com/a/46926325/3608831",[47],[110],{"type":18,"value":111},"cannot be tested on an Android emulator",{"type":18,"value":113},"\n(well it can, but the only services that you are able to discover are the ones broadcasted by your emulator).",{"type":12,"tag":20,"props":115,"children":117},{"id":116},"depend-on-it",[118],{"type":18,"value":119},"Depend on it",{"type":12,"tag":27,"props":121,"children":122},{},[123],{"type":18,"value":124},"In your Flutter project directory, run the following commands :",{"type":12,"tag":126,"props":127,"children":132},"pre",{"className":128,"code":130,"language":131,"meta":5},[129],"language-shell","flutter pub add bonsoir\nflutter pub get\n","shell",[133],{"type":12,"tag":59,"props":134,"children":135},{"__ignoreMap":5},[136],{"type":18,"value":130},{"type":12,"tag":20,"props":138,"children":140},{"id":139},"additional-instructions",[141],{"type":18,"value":142},"Additional instructions",{"type":12,"tag":144,"props":145,"children":147},"h3",{"id":146},"ios",[148],{"type":18,"value":149},"iOS",{"type":12,"tag":27,"props":151,"children":152},{},[153,155,161,163,169],{"type":18,"value":154},"If you want to use this plugin on iOS, you must update your deployment target to ",{"type":12,"tag":156,"props":157,"children":158},"em",{},[159],{"type":18,"value":160},"at least",{"type":18,"value":162}," 13.0.\nAt the top of ",{"type":12,"tag":59,"props":164,"children":166},{"className":165},[],[167],{"type":18,"value":168},"ios/Podfile",{"type":18,"value":170},", add the following :",{"type":12,"tag":126,"props":172,"children":175},{"className":173,"code":174,"filename":168,"language":131,"meta":5},[129],"platform :ios, '13.0'\n",[176],{"type":12,"tag":59,"props":177,"children":178},{"__ignoreMap":5},[179],{"type":18,"value":174},{"type":12,"tag":27,"props":181,"children":182},{},[183],{"type":18,"value":184},"Also, open your iOS project in Xcode and select Runner, Targets -> Runner and then the \"General\" tab.\nUnder the \"Minimum Deployments\" section, update the iOS version to 13.0 or higher.",{"type":12,"tag":27,"props":186,"children":187},{},[188,190,196],{"type":18,"value":189},"If you're building your app for iOS 14 or higher, you have to edit your ",{"type":12,"tag":59,"props":191,"children":193},{"className":192},[],[194],{"type":18,"value":195},"Info.plist",{"type":18,"value":197}," file. Just add\nthe following lines :",{"type":12,"tag":126,"props":199,"children":205},{"className":200,"code":202,"filename":203,"language":204,"meta":5},[201],"language-xml","\u003Ckey>NSLocalNetworkUsageDescription\u003C/key>\n\u003Cstring>Describe here why you want to use Bonsoir.\u003C/string>\n\u003Ckey>NSBonjourServices\u003C/key>\n\u003Carray>\n    \u003Cstring>_first-service._tcp\u003C/string>\n    \u003Cstring>_second-service._tcp\u003C/string>\n    \u003Cstring>_third-service._tcp\u003C/string>\n    \u003C!-- Add more here -->\n\u003C/array>\n","ios/Info.plist","xml",[206],{"type":12,"tag":59,"props":207,"children":208},{"__ignoreMap":5},[209],{"type":18,"value":202},{"type":12,"tag":27,"props":211,"children":212},{},[213],{"type":18,"value":214},"Don't forget to edit them according to your needs.",{"type":12,"tag":144,"props":216,"children":218},{"id":217},"macos",[219],{"type":18,"value":220},"macOS",{"type":12,"tag":27,"props":222,"children":223},{},[224,226,230,232,238],{"type":18,"value":225},"If you want to use this plugin on macOS, you must update your deployment target to ",{"type":12,"tag":156,"props":227,"children":228},{},[229],{"type":18,"value":160},{"type":18,"value":231}," 10.15.\nAt the top of ",{"type":12,"tag":59,"props":233,"children":235},{"className":234},[],[236],{"type":18,"value":237},"macos/Podfile",{"type":18,"value":170},{"type":12,"tag":126,"props":240,"children":243},{"className":241,"code":242,"filename":237,"language":131,"meta":5},[129],"platform :ios, '10.15'\n",[244],{"type":12,"tag":59,"props":245,"children":246},{"__ignoreMap":5},[247],{"type":18,"value":242},{"type":12,"tag":27,"props":249,"children":250},{},[251],{"type":18,"value":252},"Also, open your macOS project in Xcode and select Runner, Targets -> Runner and then the \"General\" tab.\nUnder the \"Minimum Deployments\" section, update the macOS version to 10.15 or higher.",{"type":12,"tag":144,"props":254,"children":256},{"id":255},"linux",[257],{"type":18,"value":258},"Linux",{"type":12,"tag":27,"props":260,"children":261},{},[262],{"type":18,"value":263},"If you don't have Avahi installed on your system, just install it using :",{"type":12,"tag":126,"props":265,"children":268},{"className":266,"code":267,"language":131,"meta":5},[129],"sudo apt install -y avahi-daemon avahi-discover avahi-utils libnss-mdns mdns-scan\n",[269],{"type":12,"tag":59,"props":270,"children":271},{"__ignoreMap":5},[272],{"type":18,"value":267},{"type":12,"tag":13,"props":274,"children":276},{"id":275},"getting-started",[277],{"type":18,"value":278},"Getting started",{"type":12,"tag":27,"props":280,"children":281},{},[282],{"type":18,"value":283},"Bonsoir has been made to be as easy to use as possible.",{"type":12,"tag":20,"props":285,"children":287},{"id":286},"broadcast-a-service",[288],{"type":18,"value":289},"Broadcast a service",{"type":12,"tag":27,"props":291,"children":292},{},[293,295,300],{"type":18,"value":294},"Here is how you can broadcast your service using ",{"type":12,"tag":156,"props":296,"children":297},{},[298],{"type":18,"value":299},"Bonsoir",{"type":18,"value":301}," :",{"type":12,"tag":126,"props":303,"children":308},{"className":304,"code":306,"language":307,"meta":5},[305],"language-dart","// Let's create our service !\nBonsoirService service = BonsoirService(\n  name: 'My wonderful service', // Put your service name here.\n  type: '_wonderful-service._tcp', // Put your service type here. Syntax : _ServiceType._TransportProtocolName. (see http://wiki.ros.org/zeroconf/Tutorials/Understanding%20Zeroconf%20Service%20Types).\n  port: 3030, // Put your service port here.\n);\n\n// And now we can broadcast it :\nBonsoirBroadcast broadcast = BonsoirBroadcast(service: service);\nawait broadcast.ready;\nawait broadcast.start();\n\n// ...\n\n// Then if you want to stop the broadcast :\nawait broadcast.stop();\n","dart",[309],{"type":12,"tag":59,"props":310,"children":311},{"__ignoreMap":5},[312],{"type":18,"value":306},{"type":12,"tag":20,"props":314,"children":316},{"id":315},"discover-services",[317],{"type":18,"value":318},"Discover services",{"type":12,"tag":27,"props":320,"children":321},{},[322],{"type":18,"value":323},"Here is how you can search for a broadcasted service :",{"type":12,"tag":126,"props":325,"children":328},{"className":326,"code":327,"language":307,"meta":5},[305],"// This is the type of service we're looking for :\nString type = '_wonderful-service._tcp';\n\n// Once defined, we can start the discovery :\nBonsoirDiscovery discovery = BonsoirDiscovery(type: type);\nawait discovery.ready;\n\n// If you want to listen to the discovery :\ndiscovery.eventStream!.listen((event) { // `eventStream` is not null as the discovery instance is \"ready\" !\n  if (event.type == BonsoirDiscoveryEventType.discoveryServiceFound) {\n    print('Service found : ${event.service.toJson()}')\n    event.service!.resolve(discovery.serviceResolver); // Should be called when the user wants to connect to this service.\n  } else if (event.type == BonsoirDiscoveryEventType.discoveryServiceResolved) {\n    print('Service resolved : ${event.service.toJson()}')\n  } else if (event.type == BonsoirDiscoveryEventType.discoveryServiceLost) {\n    print('Service lost : ${event.service.toJson()}')\n  }\n});\n\n// Start the discovery **after** listening to discovery events :\nawait discovery.start();\n\n// Then if you want to stop the discovery :\nawait discovery.stop();\n",[329],{"type":12,"tag":59,"props":330,"children":331},{"__ignoreMap":5},[332],{"type":18,"value":327},{"type":12,"tag":27,"props":334,"children":335},{},[336,342,344,350,352,358],{"type":12,"tag":337,"props":338,"children":339},"strong",{},[340],{"type":18,"value":341},"Note.",{"type":18,"value":343}," If you're transitioning from ",{"type":12,"tag":59,"props":345,"children":347},{"className":346},[],[348],{"type":18,"value":349},"multicast_dns",{"type":18,"value":351},", note that types don't end with ",{"type":12,"tag":353,"props":354,"children":355},"q",{},[356],{"type":18,"value":357},".local",{"type":18,"value":66},{"type":12,"tag":13,"props":360,"children":362},{"id":361},"in-depth-example",[363],{"type":18,"value":364},"In-depth example",{"type":12,"tag":27,"props":366,"children":367},{},[368,370,375,377,384],{"type":18,"value":369},"If you want a ",{"type":12,"tag":353,"props":371,"children":372},{},[373],{"type":18,"value":374},"full",{"type":18,"value":376}," example, don't hesitate to check\n",{"type":12,"tag":43,"props":378,"children":381},{"href":379,"rel":380},"https://github.com/Skyost/Bonsoir/tree/master/packages/bonsoir/example",[47],[382],{"type":18,"value":383},"this one",{"type":18,"value":385}," on Github.",{"type":12,"tag":27,"props":387,"children":388},{},[389],{"type":18,"value":390},"To run it :",{"type":12,"tag":392,"props":393,"children":394},"ol",{},[395,406,417,429],{"type":12,"tag":37,"props":396,"children":397},{},[398,405],{"type":12,"tag":43,"props":399,"children":402},{"href":400,"rel":401},"https://melos.invertase.dev/~melos-latest/getting-started#installation",[47],[403],{"type":18,"value":404},"Install Melos",{"type":18,"value":66},{"type":12,"tag":37,"props":407,"children":408},{},[409,416],{"type":12,"tag":43,"props":410,"children":413},{"href":411,"rel":412},"https://github.com/Skyost/Bonsoir/archive/refs/heads/master.zip",[47],[414],{"type":18,"value":415},"Clone the repository",{"type":18,"value":66},{"type":12,"tag":37,"props":418,"children":419},{},[420,422,428],{"type":18,"value":421},"Run ",{"type":12,"tag":59,"props":423,"children":425},{"className":424},[],[426],{"type":18,"value":427},"melos bs",{"type":18,"value":66},{"type":12,"tag":37,"props":430,"children":431},{},[432,434,440,442,448],{"type":18,"value":433},"Go to the ",{"type":12,"tag":59,"props":435,"children":437},{"className":436},[],[438],{"type":18,"value":439},"packages/bonsoir/example",{"type":18,"value":441}," directory, and run ",{"type":12,"tag":59,"props":443,"children":445},{"className":444},[],[446],{"type":18,"value":447},"flutter run",{"type":18,"value":66},{"type":12,"tag":13,"props":450,"children":452},{"id":451},"contribute",[453],{"type":18,"value":454},"Contribute",{"type":12,"tag":27,"props":456,"children":457},{},[458],{"type":18,"value":459},"You have a lot of options to contribute to this project ! You can :",{"type":12,"tag":33,"props":461,"children":462},{},[463,475,487],{"type":12,"tag":37,"props":464,"children":465},{},[466,473],{"type":12,"tag":43,"props":467,"children":470},{"href":468,"rel":469},"https://github.com/Skyost/Bonsoir/fork",[47],[471],{"type":18,"value":472},"Fork it",{"type":18,"value":474}," on Github to submit your pull requests.",{"type":12,"tag":37,"props":476,"children":477},{},[478,485],{"type":12,"tag":43,"props":479,"children":482},{"href":480,"rel":481},"https://github.com/Skyost/Bonsoir/issues/new/choose",[47],[483],{"type":18,"value":484},"Submit",{"type":18,"value":486}," a feature request or a bug report.",{"type":12,"tag":37,"props":488,"children":489},{},[490,497],{"type":12,"tag":43,"props":491,"children":494},{"href":492,"rel":493},"https://paypal.me/Skyost",[47],[495],{"type":18,"value":496},"Donate",{"type":18,"value":498}," to the developer.",{"type":12,"tag":13,"props":500,"children":502},{"id":501},"about",[503],{"type":18,"value":504},"About",{"type":12,"tag":27,"props":506,"children":507},{},[508,510,517],{"type":18,"value":509},"This plugin was initially created to use in my game, ",{"type":12,"tag":43,"props":511,"children":514},{"href":512,"rel":513},"https://werewolf.skyost.eu",[47],[515],{"type":18,"value":516},"Mobile Werewolf",{"type":18,"value":518},".\nIt is an unofficial mobile version of the famous board game Mafia / Werewolves.\nIn this game, players can play against each others via Wi-Fi, so Bonsoir allows them to easily broadcast,\ndiscover and join local network parties.",{"type":12,"tag":27,"props":520,"children":522},{"style":521},"display-block; text-align: center;",[523,525,543,544],{"type":18,"value":524},"\n  ",{"type":12,"tag":43,"props":526,"children":532},{"href":527,"className":528,"style":531},"https://apps.apple.com/app/id1504559806",[529,530],"mb-1","mb-sm-0","display: inline-block; width: 200px; max-width: 90%;",[533,535,542],{"type":18,"value":534},"\n    ",{"type":12,"tag":536,"props":537,"children":541},"img",{"src":538,"alt":539,"style":540},"https://werewolf.skyost.eu/images/stores/app_store.svg","App Store","width: 100%;",[],{"type":18,"value":524},{"type":18,"value":524},{"type":12,"tag":43,"props":545,"children":547},{"href":546,"style":531},"https://play.google.com/store/apps/details?id=fr.skyost.werewolf",[548,549,554],{"type":18,"value":534},{"type":12,"tag":536,"props":550,"children":553},{"src":551,"alt":552,"style":540},"https://werewolf.skyost.eu/images/stores/play_store.svg","Play Store",[],{"type":18,"value":524},{"type":12,"tag":27,"props":556,"children":557},{},[558,560,567],{"type":18,"value":559},"The hand icon has been created by ",{"type":12,"tag":43,"props":561,"children":564},{"href":562,"rel":563},"https://www.flaticon.com/authors/vitaly-gorbachev",[47],[565],{"type":18,"value":566},"Vitaly Gorbachev",{"type":18,"value":66},{"title":5,"searchDepth":569,"depth":569,"links":570},2,[571,572,573,579,580],{"id":22,"depth":569,"text":25},{"id":116,"depth":569,"text":119},{"id":139,"depth":569,"text":142,"children":574},[575,577,578],{"id":146,"depth":576,"text":149},3,{"id":217,"depth":576,"text":220},{"id":255,"depth":576,"text":258},{"id":286,"depth":569,"text":289},{"id":315,"depth":569,"text":318},"markdown","content:docs.md","content","docs.md","md",{"_path":587,"_dir":5,"_draft":6,"_partial":6,"_locale":5,"long":588,"short":589,"_id":590,"_type":591,"title":592,"_source":583,"_file":593,"_extension":591},"/latest-commit","c8ff4887ca257a00ba7add9d919d9590fbc0b72b","c8ff488","content:latest-commit.json","json","Latest Commit","latest-commit.json",1704794736313]